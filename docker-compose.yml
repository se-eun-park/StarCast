services:
  nginx:
    container_name: nginx
    image: nginx:latest
    restart: on-failure
    volumes:
      - ./conf/nginx.conf:/etc/nginx/nginx.conf
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    command: '/bin/sh -c ''nginx -g "daemon off;"'''
    networks:
      - ssl
      - backend
      - frontend

  certbot:
    container_name: certbot
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - nginx
    entrypoint: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; certbot renew; done'"
    networks:
      - ssl

  backend:
    container_name: backend
    image: backend:latest
    env_file:
      - .env
    ports:
      - "8000:8000"
    # depends_on:
    #   - postgresql
    #   - redis
    #   - mongodb
    networks:
      - backend
      - ssl

  frontend:
    container_name: frontend
    image: frontend:latest
    env_file:
      - .env
    ports:
      - "3000:3000"
    networks:
      - frontend
      - ssl

  # redis:
  #   container_name: redis
  #   image: redis:alpine
  #   volumes:
  #     - redis-data:/data
  #   command: redis-server --appendonly yes
  #   env_file:
  #     - .env
  #   ports:
  #     - "6379:6379"
  #   networks:
  #     - backend

  # mongodb:
  #   container_name: mongodb
  #   image: mongo:latest
  #   volumes:
  #     - mongodb-data:/data/db
  #   command: mongod --auth
  #   env_file:
  #     - .env
  #   ports:
  #     - "27017:27017"
  #   networks:
  #     - backend

  # postgresql:
  #   container_name: postgresql
  #   image: postgres:13-alpine
  #   volumes:
  #     - postgresql-data:/var/lib/postgresql/data
  #   environment:
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_DB: ${POSTGRES_DB}
  #   ports:
  #     - "5432:5432"
  #   networks:
  #     - backend

networks:
  ssl:
  backend:
  frontend:
# volumes:
#   redis-data:
#   mongodb-data:
#   postgresql-data:
