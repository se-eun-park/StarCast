services:
  nginx:
    container_name: nginx
    image: nginx:latest
    restart: on-failure
    volumes:
      - ./conf/nginx.conf:/etc/nginx/nginx.conf
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    command: '/bin/sh -c ''nginx -g "daemon off;"'''
    networks:
      - ssl
      - backend
      - frontend

  certbot:
    container_name: certbot
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - nginx
    entrypoint: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; certbot renew; done'"
    networks:
      - ssl

  backend:
    container_name: backend
    image: backend:latest
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - mysql
      - redis
    networks:
      - backend
      - ssl

  frontend:
    container_name: frontend
    image: frontend:latest
    env_file:
      - .env
    ports:
      - "3000:3000"
    networks:
      - frontend
      - ssl

  mysql:
    container_name: database
    image: mysql:8.0
    volumes:
      - mysql-data:/var/lib/mysql
    env_file:
      - .env
    ports:
      - "3306:3306"
    networks:
      - backend

  redis:
    container_name: redis
    image: redis:alpine
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    env_file:
      - .env
    ports:
      - "6379:6379"
    networks:
      - backend

networks:
  ssl:
  backend:
  frontend:
  mysql:
  redis:

volumes:
  mysql-data:
  redis-data:
